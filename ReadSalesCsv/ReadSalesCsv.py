# Reads CSV files and puts the data into a dictionary in a py file

# COL_FLAGS must be one of the following:
# ..doNotMatch - don't look for a match in Movielist.txt and don't report as an error


import csv
import datetime
import glob
import math
import os
import re
import typing

DATA_FOLDER = r'.\Csv_Sales'
OUTPUT_FILE = r'.\Output\SalesData.py'

COL_DATE = 0
COL_PAYMENTRECEIVED = 1
COL_PAYPALFEE = 2
COL_POSTAGE = 3
COL_OTHERCOSTS = 4
COL_DESCRIPTION = 5
COL_PURCHASEPRICEOFFSET = 6
COL_ITEMPROFIT = 7
COL_MOVIELISTKEY = 8
COL_FLAGS = 9

def MakeFlagString(flags):
	returnVal = '['
	for f in flags:
		returnVal += f"'{f}',"
	if returnVal[-1:] == ',': returnVal = returnVal[:-1]  # get rid of trailing ,
	returnVal += ']'
	return returnVal

def ToFloat(inVal):
	returnVal = re.sub('[^0-9\.]', '', inVal)
	try:
		returnVal = float(returnVal)
	except Exception as ex:
		return None

	return returnVal


files = glob.glob(os.path.join(DATA_FOLDER, '*.csv'))
sales: dict = {}
errorList = []

for file in files:
	
	with open(file) as csv_file:
		
		csv_reader = csv.reader(csv_file, delimiter=',')
		line_count = 0
		for row in csv_reader:
			line_count += 1

		
			# data starts on line 4
			if line_count < 4:
				continue

			if len(row[COL_PAYMENTRECEIVED]) > 0:

				description = row[COL_DESCRIPTION]
				amount = ToFloat(row[COL_PAYMENTRECEIVED])
				date = row[COL_DATE]
				movieListKey = row[COL_MOVIELISTKEY] if len(row) > COL_MOVIELISTKEY else ''
				flags = row[COL_FLAGS].split() if len(row) > COL_FLAGS else []
			
				# can't convert payment received to float
				if amount is None:
					errorList.append(f'["Bad amount", "{file}", "{row[COL_DATE]}", "{row[COL_PAYMENTRECEIVED]}"]')
					continue
				
				# we've seen this one before
				if (
					description in sales
					or (len(movieListKey) > 0 and movieListKey in sales)
				):
					# trouble here if the key doesn't exist
					if description not in sales.keys(): sales[description] = [0, 0, '01/01/1970', '', []]
					sales[description][0] += 1
					sales[description][1] += amount
					sales[description][2].append(date)
					sales[description][3] = movieListKey
					sales[description][4] = list(set(flags + sales[description][4]))  # combine flags

				# use movielistkey if it exists
				elif len(movieListKey) > 0 and movieListKey not in sales: 
					sales[movieListKey] = [1, amount, [date], movieListKey, flags]
				
				# make a new one
				else:
					sales[description] = [1, amount, [date], movieListKey, flags]

				
with open(OUTPUT_FILE, "w") as file:
	file.write(f'# This file generated by ReadSalesCsv.py on {datetime.date.today()}\n')
	file.write('# [Count, Total payment received, Dates, MovieListKey, Flags\n')
	file.write('sales={}\n')
	for key in sales.keys():
		dates = ', '.join(sales[key][2])
		file.write(f'sales["{key}"] = ["{sales[key][0]}", "{math.floor(sales[key][1]):03}", "{dates}", "{sales[key][3]}", "{MakeFlagString(sales[key][4])}"]\n')

	file.write('\nerrors=[]\n')
	for e in errorList:
		file.write(f'errors.append({e})\n')

